1.  Setup and load your Linux server as your normally do in your enviroment
2.  Install docker for CentOS:  https://docs.docker.com/engine/install/centos/
3.  And the docker CUDA runtime:  https://github.com/NVIDIA/nvidia-container-runtime
4.  Configure a docker volume for persistent storage to use in the POC containers:  https://docs.docker.com/storage/volumes/
    docker volume create poc-host1
    docker volume create poc-host2
5.  Start 2 containers, each with their own access to 4 GPU's each an 1 Mellanox card each
--mount source=poc-host1,target=/app    
docker run -it --runtime=nvidia --mount source=poc-host1,target=/app --device=/dev/infiniband/uverbs0 -e NVIDIA_VISIBLE_DEVICES=0,1,2,3 -e NVIDIA_DRIVER_CAPABILITIES=compute,utility --rm csmykay/ess-hpecp-mofed-centos7.6-image:latest
docker run -it --runtime=nvidia --mount source=poc-host2,target=/app --device=/dev/infiniband/uverbs1 -e NVIDIA_VISIBLE_DEVICES=4,5,6,7 -e NVIDIA_DRIVER_CAPABILITIES=compute,utility --rm csmykay/ess-hpecp-mofed-centos7.6-image:latest

We need to verify your network setup before we can recommend how to setup the docker images best for your TCP/IP network access.  In general Docker uses "Bridge" mode which would could work for the POC.

Also this image currently does not have all of the custom customer packages.  I will continure to try and build that image.


docker run -it --runtime=nvidia --device=/dev/infiniband/uverbs0 -e NVIDIA_VISIBLE_DEVICES=0,1,2,3 -e NVIDIA_DRIVER_CAPABILITIES=compute,utility --rm csmykay/ess-hpecp-mofed-centos7.6-image:latest

--privileged --device=/dev/infiniband/uverbs0